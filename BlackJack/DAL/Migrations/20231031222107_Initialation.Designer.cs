// <auto-generated />
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(BlackjackDbContext))]
    [Migration("20231031222107_Initialation")]
    partial class Initialation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.Game", b =>
                {
                    b.Property<string>("GameId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DeckSize")
                        .HasColumnType("int");

                    b.Property<int>("NoOfPlayers")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("DAL.Models.Player", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DAL.Models.Result", b =>
                {
                    b.Property<string>("PlayerId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(0);

                    b.Property<string>("GameId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(1);

                    b.Property<string>("GameId1")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PlayerId1")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ResultValue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PlayerId", "GameId");

                    b.HasIndex("GameId");

                    b.HasIndex("GameId1");

                    b.HasIndex("PlayerId1");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("DAL.Models.Result", b =>
                {
                    b.HasOne("DAL.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Game", null)
                        .WithMany("Results")
                        .HasForeignKey("GameId1");

                    b.HasOne("DAL.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Player", null)
                        .WithMany("Results")
                        .HasForeignKey("PlayerId1");

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("DAL.Models.Game", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("DAL.Models.Player", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
